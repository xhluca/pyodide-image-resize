{"version":3,"sources":["components/UploadButton.js","python/main.py","App.js","reportWebVitals.js","index.js"],"names":["Input","styled","display","UploadButton","props","onChange","btnProps","htmlFor","accept","id","type","Button","variant","component","getPyodide","a","window","loadPyodide","indexURL","pyodide","loadPackage","runPythonScript","code","fetch","text","codeText","runPythonAsync","App","useState","originalSrc","setOriginalSrc","processedSrc","setProcessedSrc","uploadBtnDisabled","setUploadBtnDisabled","processBtnDisabled","setProcessBtnDisabled","saveFormat","setSaveFormat","ratioRef","useRef","imgB64Ref","mainPyRef","processImageRef","handleUpload","e","file","target","files","reader","FileReader","onload","result","current","readAsDataURL","handleResize","newRatio","value","handleProcess","imgB64","ratio","processImage","console","log","useEffect","mainPy","globals","get","CssBaseline","Container","maxWidth","Grid","container","spacing","item","lg","Card","CardContent","xs","md","Typography","Slider","defaultValue","valueLabelDisplay","marks","label","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","disabled","color","onClick","src","alt","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef1e6831.chunk.js","sourcesContent":["import Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\n\nconst Input = styled('input')({\n  display: 'none',\n});\n\n\nconst UploadButton = props => {\n  const {onChange, ...btnProps} = props;\n  return (\n    <>\n      <label htmlFor=\"contained-button-file\">\n        <Input accept=\"image/*\" id=\"contained-button-file\" type=\"file\" onChange={onChange}/>\n        <Button variant=\"contained\" component=\"span\" {...btnProps}>\n          Upload\n        </Button>\n      </label>\n    </>\n  )\n}\n\nexport default UploadButton;","export default __webpack_public_path__ + \"static/media/main.d4bc4b87.py\";","import { useEffect, useState, useRef } from 'react';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport UploadButton from './components/UploadButton';\nimport Slider from '@mui/material/Slider';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport './App.css';\nimport mainPy from './python/main.py';\n\nconst getPyodide = async () => {\n  if (!('pyodide' in window)) {\n    window.pyodide = await window.loadPyodide({\n      indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\"\n    });\n    await window.pyodide.loadPackage(\"Pillow\");\n  }\n\n  return window.pyodide;\n}\n\nconst runPythonScript = async (code) => {\n  const codeText = await (await fetch(code)).text();\n  const pyodide = await getPyodide();\n  return await pyodide.runPythonAsync(codeText);\n}\n\n\nconst App = () => {\n  const [originalSrc, setOriginalSrc] = useState();\n  const [processedSrc, setProcessedSrc] = useState();\n  const [uploadBtnDisabled, setUploadBtnDisabled] = useState(true);\n  const [processBtnDisabled, setProcessBtnDisabled] = useState(true);\n  const [saveFormat, setSaveFormat] = useState('PNG');\n  const ratioRef = useRef(1);\n  const imgB64Ref = useRef();\n  const mainPyRef = useRef();\n  const processImageRef = useRef();\n\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async () => {\n      setOriginalSrc(reader.result);\n      imgB64Ref.current = reader.result;\n      setProcessBtnDisabled(false);\n    }\n    reader.readAsDataURL(file);\n  }\n\n  const handleResize = async (e) => {\n    const newRatio = e.target.value / 100;\n    ratioRef.current = newRatio;\n  }\n\n  const handleProcess = async () => {\n    const imgB64 = imgB64Ref.current;\n    const ratio = ratioRef.current;\n    const processImage = processImageRef.current;\n\n    console.log(\"imgB64\", imgB64);\n    console.log(\"ratio\", ratio);\n    console.log(\"processImage\", processImage);\n\n    setProcessedSrc(processImage(imgB64, ratio, saveFormat));\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (!mainPyRef.current) {\n        console.log('Loading main.py');\n        await runPythonScript(mainPy);\n        mainPyRef.current = true;\n        processImageRef.current = window.pyodide.globals.get('process_image');\n        setUploadBtnDisabled(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth={false}>\n        <Grid container spacing={2}>\n          <Grid item lg={12}>\n            <Card>\n              <CardContent>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={6} lg={4}>\n                    <Typography>New Size</Typography>\n                    <Slider\n                      defaultValue={100}\n                      valueLabelDisplay=\"auto\"\n                      marks={[\n                        { value: 0, label: '0%' },\n                        { value: 50, label: '50%' },\n                        { value: 100, label: '100%' },\n                      ]}\n                      onChange={handleResize}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={4}>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">Save Format</InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={saveFormat}\n                        label=\"save-format\"\n                        onChange={e => setSaveFormat(e.target.value)}\n                      >\n                        <MenuItem value=\"PNG\">PNG</MenuItem>\n                        <MenuItem value=\"JPEG\">JPEG</MenuItem>\n                        <MenuItem value=\"BMP\">BMP</MenuItem>\n                        <MenuItem value=\"GIF\">GIF</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <UploadButton onChange={handleUpload} disabled={uploadBtnDisabled} />\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      disabled={processBtnDisabled}\n                      onClick={handleProcess}\n                    >\n                      Process\n                    </Button>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <img src={originalSrc} alt=\"Click on 'Upload' to start\" style={{ maxWidth: \"100%\" }} />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <img src={processedSrc} alt=\"Processed img will appear here\" style={{ maxWidth: \"100%\" }} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}